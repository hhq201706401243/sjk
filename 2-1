递归算法：
void hanoi(int n,int a,int b,int c)
{
if(n>0)
{
hanoi(n-1,a,c,b);
move(a,b);
hanoi(n-1,c,b,a);
}
}

非递归算法：
void hannoi(int n)
{
int top[3]={0,0,0};
int **tower;
MAKE2DAray(tower,n+1,3);
int b,bb,x,y,min=0;
for(i=0;i<n;i++)
{
tower[i][0]=n-i+1;
tower[i][1]=n+1;
tower[i][2]=n+1;
}
top[o]=n;
b=odd(n);
bb=1;
while(top[1]<n)
{
if(bb)
{
x=min;
if(b)
y=(x+1)%3;
else
y=(x+2)%3;
min=y;
bb=0;
}
else
{
x=(min+1)%3;
y=(min+2)%3;
bb=1;
if(tower[x][x]>tower[y][y])
Swap(x,y);
}
move(tower[top[x]][x],x+1,y+1);
tower[top[y]+1][y]=tower[top[x]][x];
tower[x]--;
tower[y]--;
}
}

